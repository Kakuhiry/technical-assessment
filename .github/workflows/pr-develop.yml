name: Develop pull request

on:
  pull_request:
    branches:
      "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  conventional-check:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - uses: actions/checkout@v2
      - uses: amannn/action-semantic-pull-request@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # test:
  #   runs-on: ubuntu-latest
  #   if: ${{ !github.event.pull_request.draft }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 14.x
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Start ${{ matrix.apps }}-service
  #       run: node app.js &
  #     - run: wait 5
  #     - run: |
  #         response = $(curl -X POST \
  #         -H "X-Parse-REST-API-Key: ${{secrets.API_KEY}}" \
  #         -H "X-JWT-KWY: ${{secrets.JWT}}" \
  #         -H "Content-Type: application/json" \
  #         -d '{ "message" : "This is a test", "to": "Juan Perez", "from": "Rita Asturia", "timeToLifeSec" : 45 }' \
  #         http://localhost/DevOps}
      



  
  # docker-build:
  #   needs: changes
  #   if: ${{ !github.event.pull_request.draft }}
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: 'read'
  #     id-token: 'write'
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       apps: ${{ fromJSON(needs.changes.outputs.apps) }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: get version
  #       id: version
  #       uses: notiz-dev/github-action-json-property@release
  #       with:
  #         path: "./apps/${{ matrix.apps }}/package.json"
  #         prop_path: "version"
  #     - name: Build and push
  #       uses: ./.github/workflows/reusable/container/build
  #       with:
  #         dockerfile_path: ./Dockerfile.production
  #         service_name: ${{ matrix.apps }}
  #         tag_suffix: -beta
  #         version: ${{ steps.version.outputs.prop }}
  #         project_id: ${{ secrets.GCP_PROJECT_ID_PROD }}
  #         push: false
