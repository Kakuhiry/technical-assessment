name: Deploy - Master [test]
on:
  push:
    branches:
      - "branch-testing2"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{steps.version_new.outputs.prop}}
      old_version: ${{steps.version_old.outputs.prop}}
    if: ${{ !github.event.pull_request.draft }}
    steps:
    - uses: actions/checkout@v3
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_AUTH_SA }}'
    - name: Get version
      id: version_old
      uses: notiz-dev/github-action-json-property@release
      with:
        path: "./package.json"
        prop_path: "version"
    - name: Configure git
      run: |
        git config user.name "Github-Actions"
        git config user.email "<>"
    - name: config npm version
      run: npm config set git-tag-version false
    - name: Bump version major
      if: contains( github.event.head_commit.message, 'BREAKING_CHANGES!:')
      id: major
      run: |
        npm version major
    - name: Bump version minor
      if: contains( github.event.head_commit.message, 'feat:') && steps.major.outcome == 'skipped'
      id: minor
      run: |
        npm version minor
    - name: Bump version patch
      if: contains( github.event.head_commit.message, 'fix:') && steps.major.outcome == 'skipped' && steps.minor.outcome == 'skipped'
      run: |
        npm version patch
    - name: Get version
      id: version_new
      uses: notiz-dev/github-action-json-property@release
      with:
        path: "./package.json"
        prop_path: "version"
    - name: update docker-compose
      run: perl -pi.bak -e "s/"${{needs.build.outputs.old_version}}"/"${{needs.build.outputs.new_version}}"/g" docker-compose.yml
    - id: secret
      uses: 'google-github-actions/get-secretmanager-secrets@v0'
      with:
        secrets: |-
          env:${{ secrets.GCP_PROJECT_NAME }}/env
    - id: nginx
      uses: 'google-github-actions/get-secretmanager-secrets@v0'
      with:
        secrets: |-
          nginx_conf:${{ secrets.GCP_PROJECT_NAME }}/nginx_conf
    - run: 'echo "$ENV" > .env'
      shell: bash
      env:
        ENV: ${{ steps.secret.outputs.env }}
    - run: 'echo "$NGINX_CONF" > nginx.conf'
      shell: bash
      env:
        NGINX_CONF: ${{ steps.nginx.outputs.nginx_conf }}
    - run: "ls -a"
    - run: "gcloud auth configure-docker us.gcr.io --quiet"
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: us.gcr.io/serious-dialect-365703/assessment:${{steps.version_new.outputs.prop}}
    - name: Commit new version
      run: |
        git pull
        git add package.json docker-compose.yml
        git commit -m "release:${{steps.version_new.outputs.prop}}"
        git push
  
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs:
  #       - "build"
  #   steps:
  #   - uses: actions/checkout@v3
  #   - id: 'auth'
  #     uses: 'google-github-actions/auth@v0'
  #     with:
  #       credentials_json: '${{ secrets.GCP_AUTH_SA }}'
  #   - id: url
  #     uses: 'google-github-actions/get-secretmanager-secrets@v0'
  #     with:
  #       secrets: |-
  #         host:${{ secrets.GCP_PROJECT_NAME }}/my-secret
  #   - name: executing remote ssh commands using password
  #     uses: appleboy/ssh-action@master
  #     env:
  #       prev_version: ${{needs.build.outputs.old_version}}
  #       new_version: ${{needs.build.outputs.new_version}}
  #     with:
  #       host: ${{ steps.url.outputs.host }}
  #       username: ${{ secrets.USERNAME }}
  #       key: ${{ secrets.KEY }}
  #       script: |
  #         cd technical-assessment
  #         perl -pi.bak -e "s/"${{needs.build.outputs.old_version}}"/"${{needs.build.outputs.new_version}}"/g" docker-compose.yml
  #         sudo docker-compose up --scale app=2 -d
